# Task ID: 16
# Title: Remove Tab Navigation from Individual Document Pages
# Status: pending
# Dependencies: 1, 11
# Priority: high
# Description: Modify BaseResultsPage.tsx to conditionally hide the DocumentTypeNavigation component on individual document pages while maintaining tab functionality for comprehensive analysis pages.
# Details:
This task requires updating the BaseResultsPage component to conditionally render the DocumentTypeNavigation component based on the current route:

1. Update BaseResultsPage.tsx to check the current route path using React Router's useLocation hook
2. Implement logic to determine when to show/hide tabs:
   - Hide tabs on individual document pages: '/view-results/balance-sheet', '/view-results/cash-flow', '/view-results/income-statement'
   - Show tabs on comprehensive analysis pages (e.g., '/view-results')
3. Modify the component structure to maintain proper layout when tabs are hidden:
   ```tsx
   import { useLocation } from 'react-router-dom';
   
   // Inside BaseResultsPage component
   const location = useLocation();
   const path = location.pathname;
   
   // Define individual document routes that should not show tabs
   const individualDocumentRoutes = [
     '/view-results/balance-sheet',
     '/view-results/cash-flow', 
     '/view-results/income-statement'
   ];
   
   // Check if current route is an individual document page
   const isIndividualDocumentPage = individualDocumentRoutes.includes(path);
   
   // Conditional rendering in the return statement
   return (
     <Container>
       {!isIndividualDocumentPage && <DocumentTypeNavigation />}
       {/* Rest of the component */}
     </Container>
   );
   ```
4. Ensure proper spacing and layout adjustments when tabs are hidden
5. Verify that navigation functionality remains intact for comprehensive analysis pages
6. Update any dependent styling that might be affected by the absence of the navigation component

# Test Strategy:
1. Unit test the conditional rendering logic in BaseResultsPage:
   - Mock different route paths and verify DocumentTypeNavigation renders correctly
   - Test edge cases like nested routes or routes with query parameters

2. Integration testing:
   - Navigate to individual document pages (/view-results/balance-sheet, /view-results/cash-flow, /view-results/income-statement) and verify tabs are hidden
   - Navigate to comprehensive analysis pages and verify tabs are displayed
   - Test navigation between pages to ensure proper state management

3. UI/Visual testing:
   - Verify layout is properly adjusted when tabs are hidden
   - Check for any spacing issues or visual artifacts
   - Ensure responsive design works correctly with and without tabs

4. Regression testing:
   - Verify that existing functionality on all pages continues to work
   - Check that document data loading and display is unaffected
   - Ensure navigation between pages works as expected

5. Browser compatibility testing:
   - Test in multiple browsers to ensure consistent behavior

# Subtasks:
## 1. Add Route Detection Logic in BaseResultsPage [pending]
### Dependencies: None
### Description: Implement logic to detect individual document routes using React Router's useLocation hook in BaseResultsPage.tsx
### Details:
Import useLocation from react-router-dom. Create a constant array containing the paths for individual document pages ('/view-results/balance-sheet', '/view-results/cash-flow', '/view-results/income-statement'). Use the hook to get the current location and check if the current path matches any of the individual document routes using an includes check. Store this boolean in a constant named 'isIndividualDocumentPage'.

## 2. Implement Conditional Rendering for DocumentTypeNavigation [pending]
### Dependencies: None
### Description: Modify the BaseResultsPage component to conditionally render the DocumentTypeNavigation component based on the route detection logic
### Details:
Update the return statement in BaseResultsPage to conditionally render the DocumentTypeNavigation component. Wrap the DocumentTypeNavigation component in a conditional statement that only renders it when isIndividualDocumentPage is false. Ensure the rest of the component structure remains intact.

## 3. Adjust Layout and Spacing for Hidden Navigation [pending]
### Dependencies: None
### Description: Update the component structure and styling to maintain proper layout when the navigation tabs are hidden
### Details:
Review and modify any CSS or styling that might be affected by the absence of the DocumentTypeNavigation component. This may include adjusting margins, padding, or container heights to ensure the page layout remains visually balanced when tabs are hidden. Consider adding conditional classes to the container based on whether tabs are shown or hidden.

## 4. Create Unit Tests for Conditional Rendering [pending]
### Dependencies: None
### Description: Develop unit tests to verify the conditional rendering logic works correctly across different routes
### Details:
Create or update unit tests for BaseResultsPage that mock different route paths and verify the DocumentTypeNavigation component is rendered or hidden appropriately. Test both individual document routes and comprehensive analysis routes. Use React Testing Library to check for the presence or absence of the navigation component in the DOM.

## 5. Perform Integration Testing and Final Verification [pending]
### Dependencies: None
### Description: Conduct comprehensive testing to ensure navigation functionality remains intact and the UI is consistent across all pages
### Details:
Test the complete user flow by navigating between comprehensive analysis pages and individual document pages. Verify that tabs appear and disappear as expected when navigating between different routes. Check that all navigation functionality still works correctly on comprehensive analysis pages. Ensure there are no visual glitches or layout issues when transitioning between pages with and without tabs.

